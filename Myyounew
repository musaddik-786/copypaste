

import os
import json
from dotenv import load_dotenv
from azure.core.credentials import AzureKeyCredential
from azure.ai.documentintelligence import DocumentIntelligenceClient


def main():
    load_dotenv()
    endpoint = os.getenv("ENDPOINT")
    key = os.getenv("KEY")
    model_id = os.getenv("MODEL_ID")

    if not (endpoint and key and model_id):
        raise ValueError("Missing ENDPOINT, KEY, or MODEL_ID in .env file.")

    input_path = os.path.join(os.getcwd(), "input.pdf")
    output_path = os.path.join(os.getcwd(), "output.json")

    if not os.path.exists(input_path):
        raise FileNotFoundError(
            f"Could not find 'input.pdf' in {os.getcwd()}.\n"
            f"Please place your document there and re-run: python analyze_local.py"
        )

    print("Connecting to Azure Document Intelligence service...")
    client = DocumentIntelligenceClient(
        endpoint=endpoint,
        credential=AzureKeyCredential(key)
    )

    print(f" Analyzing '{input_path}' using model '{model_id}'...")
    with open(input_path, "rb") as f:
        poller = client.begin_analyze_document(model_id=model_id, body=f)
        result = poller.result()
    # print(result)    

    print("Saving results as 'output.json'...")
    json_data = result.as_dict()
    with open(output_path, "w", encoding="utf-8") as wf:
        json.dump(json_data, wf, indent=2, ensure_ascii=False)

    print(f"Input file:  {input_path}")
    print(f"Output file: {output_path}")
    print("You can open 'output.json' to see the same JSON as in Azure Studio.\n")


if __name__ == "__main__":
    main()
